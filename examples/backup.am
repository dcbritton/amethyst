
#
$a:int = 1
$c:char* = "string!"

type Name
    @first:char*
    @last:char*
end

type Member
    @name:Name
    @age:int
    @luckyNumbers:int*

    new(name:char*, age:int, luckyNumbers:int*)
        @name:Name
        @age:int
        @luckyNumbers:int*
    end

    new(other:Member)
        @name.first = other.first
        @age = other.age
        @luckyNumbers = other.luckyNumbers
    end

    def @getNumber():int
        return 1
    end 
end

def main(first:int):int
    example:Member* = new* Member("David", 22, [1,2,3])
    a:bool = true or false

    while first < 1 or first > 2 do
        example[0].name.first = "Daviid"
        example[0].luckyNumbers[0] = $a
        while first < 1 or first > 2 do
            break
        end
        continue
    end
    break
    return 0
end

#
$arr:int* = [1, 2, 3]
$size:int = 3

def main():int
    i:int = 0
    while i < $size do
        $arr[i] = $arr[i] * 2
        i = i + 1
    end

    return 0
end

def foo(a:int, b:int):int

    return (a + b) * a
end

def main():int
    arr:int** = stack [5] int*

    i:int = 0
    while i != 5 do
        arr[i] = stack [5] int
        i = i + 1
    end

    k:int = 0
    while k != 5 do
        j:int = 0
        while j != 5 do
            arr[k][j] = foo(k, j)
            j = j + 1
        end
        k = k + 1
    end

    return arr[4][3]
end