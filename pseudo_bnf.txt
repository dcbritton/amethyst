// pseudo_bnf.txt
// contains a tentative pseudo-bnf of amethyst syntax

comp_stmt -  [stmt terminator]* stmt [terminator]

stmt        -   var_def
            |   expr
            |   func_def
            |   type_def
            |   return expr
            |   if expr comp_stmt [elsif expr comp_stmt]* [else comp_stmt] end 

var_def     -   identifier:type_name = expr

expr        -   eq_expr

eq_expr     -   rel_expr
            |   eq_expr == rel_expr
	        |   eq_expr != rel_expr

rel_expr    -   shift_expr
	        |   rel_expr < shift_expr
	        |   rel_expr > shift_expr
	        |   rel_expr <= shift_expr
	        |   rel_expr >= shift_expr

shift_expr  -   add_expr
	        |   shift_expr << add_expr
	        |   shift_expr >> add_expr

add_expr    -   mult_expr
	        |   add_expr + mult_expr
	        |   add_expr - mult_expr  

mult_expr   -   primary
            |   mult_expr * primary
	        |   mult_expr / primary
	        |   mult_expr % primary

primary     -   (expr)
            |   call
            |   literal
            |   var_name

call        -   func_name call_args
            -   func_name(call_args)

call_args   -   [expr, ]* expr 

func_name   -   identifier
var_name    -   identifier
type_name   -   identifier

type_def    -   type identifier [func_def | member_def]* end

member_def  -   @identifier:type_name = expr

func_def    -   def identifier(param_list):type_name terminator comp_stmt end

param_list  -   [parameter, ]* parameter

parameter   -   identifier:type_name
