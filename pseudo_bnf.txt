// pseudo_bnf.txt
// contains a tentative pseudo-bnf of amethyst syntax

program     -   comp_stmt

comp_stmt   -   [stmt]*

stmt        -   var_def
            |   eq_expr
            |   assignment
            |   func_def
            |   type_def
            |   return_stmt
            |   conditional
            |   while_loop

while_loop  -   while expr do comp_stmt end

conditional -   if expr comp_stmt [elsif expr comp_stmt]* [else comp_stmt] end
            
return_stmt -   return eq_expr

assignment  -   identifier = expr

var_def     -   identifier:type_name = expr

eq_expr     -   rel_expr
            |   eq_expr == rel_expr
	        |   eq_expr != rel_expr

rel_expr    -   shift_expr
	        |   rel_expr < shift_expr
	        |   rel_expr > shift_expr
	        |   rel_expr <= shift_expr
	        |   rel_expr >= shift_expr

shift_expr  -   add_expr
	        |   shift_expr << add_expr
	        |   shift_expr >> add_expr

add_expr    -   mult_expr
	        |   add_expr + mult_expr
	        |   add_expr - mult_expr  

mult_expr   -   dot_expr
            |   mult_expr * dot_expr
	        |   mult_expr / dot_expr
	        |   mult_expr % dot_expr

dot_expr    -   primary
            |   dot_expr . primary

primary     -   (expr)
            |   call
            |   literal
            |   var_name

call        -   func_name call_args
            -   func_name(call_args)

call_args   -   [expr, ]* expr 

func_name   -   identifier
var_name    -   identifier
type_name   -   identifier

type_def    -   type identifier [var_def | func_def]* end

func_def    -   def identifier(param_list):type_name comp_stmt end

param_list  -   [parameter, ]* parameter

parameter   -   identifier:type_name
